[
  {
    "ContainingType": "WebAPI.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userForLoginDto",
        "Type": "Core.Security.Dtos.UserForLoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebAPI.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userForRegisterDto",
        "Type": "Core.Security.Dtos.UserForRegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebAPI.Controllers.BrandsController",
    "Method": "Add",
    "RelativePath": "api/Brands",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "Application.Features.Brands.Commands.Create.CreateBrandCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebAPI.Controllers.BrandsController",
    "Method": "GetListPagination",
    "RelativePath": "api/Brands",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "brandQuery",
        "Type": "Application.Features.Brands.Queries.GetListPagination.GetListPaginationBrandQuery",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebAPI.Controllers.BrandsController",
    "Method": "GetListDynamic",
    "RelativePath": "api/Brands/dynamic",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "dynamic",
        "Type": "Core.Persistence.Dynamic.Dynamic",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebAPI.Controllers.CarImagesController",
    "Method": "Add",
    "RelativePath": "api/CarImages",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "CarId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "ImagePath",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebAPI.Controllers.CarImagesController",
    "Method": "Delete",
    "RelativePath": "api/CarImages/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebAPI.Controllers.CarImagesController",
    "Method": "Update",
    "RelativePath": "api/CarImages/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "formFile",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebAPI.Controllers.CarImagesController",
    "Method": "GetImagesByCarId",
    "RelativePath": "api/CarImages/getcarid/{carId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "carId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebAPI.Controllers.CarImagesController",
    "Method": "GetAll",
    "RelativePath": "api/CarImages/getlist",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebAPI.Controllers.CarsController",
    "Method": "Add",
    "RelativePath": "api/Cars",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createCarCommand",
        "Type": "Application.Features.Cars.Command.Create.CreateCarCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebAPI.Controllers.CarsController",
    "Method": "GetListPagination",
    "RelativePath": "api/Cars",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebAPI.Controllers.CarsController",
    "Method": "GetListCarByModelId",
    "RelativePath": "api/Cars/getcarbymodel",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "modelId",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebAPI.Controllers.ModelsController",
    "Method": "Add",
    "RelativePath": "api/Models",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "Application.Features.Models.Commands.Create.CreateModelCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebAPI.Controllers.ModelsController",
    "Method": "GetList",
    "RelativePath": "api/Models/{BrandId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "BrandId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]